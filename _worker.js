import connect from 'cloudflare:sockets'let authToken = '5c240cb3-0c29-491a-ad03-32a30aafe25d'let fallbackAddress = ''let fallbackPort = '443'let dynamicFallbackAddress = ''let dynamicFallbackPort = '443'const E_INVALID_DATA = atob('aW52YWxpZCBkYXRh')const E_INVALID_USER = atob('aW52YWxpZCB1c2Vy')const E_UNSUPPORTED_CMD = atob('Y29tbWFuZCBpcyBub3Qgc3VwcG9ydGVk')const E_UDP_DNS_ONLY = atob('VURQIHByb3h5IG9ubHkgZW5hYmxlIGZvciBETlMgd2hpY2ggaXMgcG9ydCA1Mw==')const E_INVALID_ADDR_TYPE = atob('aW52YWxpZCBhZGRyZXNzVHlwZQ==')const E_EMPTY_ADDR = atob('YWRkcmVzc1ZhbHVlIGlzIGVtcHR5')const E_WS_NOT_OPEN = atob('d2ViU29ja2V0LmVhZHlTdGF0ZSBpcyBub3Qgb3Blbg==')const E_INVALID_ID_STR = atob('U3RyaW5naWZpZWQgaWRlbnRpZmllciBpcyBpbnZhbGlk')const ADDRESS_TYPE_IPV4 = 1const ADDRESS_TYPE_URL = 2const ADDRESS_TYPE_IPV6 = 3function isValidFormat(strconst userRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/ireturn userRegex.test(str)function parseAddressAndPort(inputifinput.includes('['&& input.includes(']')const match = input.match(/^\[([^\]]+)\](?::(\d+))?$/)ifmatchreturn address: match[1]port: match[2] ? parseInt(match[2]10: nullconst lastColonIndex = input.lastIndexOf(':')iflastColonIndex > 0const address = input.substring(0lastColonIndex)const portStr = input.substring(lastColonIndex + 1)const port = parseInt(portStr10)if!isNaN(port&& port > 0 && port <= 65535return addressportreturn address: inputport: nullexport default async fetch(requestenvconst subPath = authToken.toLowerCase()ifdynamicFallbackAddressfallbackAddress = dynamicFallbackAddressfallbackPort = dynamicFallbackPortconst url = new URL(request.url)ifrequest.headers.get('Upgrade'=== 'websocket'return await handleWsRequest(request)else ifrequest.method === 'GET'ifurl.pathname === '/region'ifdynamicFallbackAddress && dynamicFallbackAddress.trim()const currentAddress = dynamicFallbackPort !== '443' ? `${dynamicFallbackAddress}:${dynamicFallbackPort}` : dynamicFallbackAddressreturn new Response(JSON.stringify(mode: 'DYNAMIC'detectionMethod: '动态设置模式'customIP: currentAddresssource: 'URL参数设置'timestamp: new Date().toISOString(})headers: 'Content-Type': 'application/json')else return new Response(JSON.stringify(mode: 'DEFAULT'detectionMethod: '默认模式'timestamp: new Date().toISOString(})headers: 'Content-Type': 'application/json')ifurl.pathname.startsWith('/proxyip=')const proxyIP = url.pathname.substring(9)// 去掉 "/proxyip=" 前缀 ifproxyIP && proxyIP.trim()const inputAddress = proxyIP.trim()ifinputAddress && inputAddress.length > 0const parseResult = parseAddressAndPort(inputAddress)ifparseResult && parseResult.address && parseResult.address.length > 0dynamicFallbackAddress = parseResult.addressdynamicFallbackPort = parseResult.port ? parseResult.port.toString(: '443'// 使用提供的端口或默认端口 fallbackAddress = dynamicFallbackAddressfallbackPort = dynamicFallbackPortconst responseHtml = `<!DOCTYPE html> <html lang="zh-CN"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-widthinitial-scale=1.0"> <title>代理IP设置成功</title> <style> body font-family: "Courier New"monospacebackground: #000color: #00ff00display: flexjustify-content: centeralign-items: centermin-height: 100vhmargin: 0.container text-align: centerpadding: 40pxborder: 2px solid #00ff00border-radius: 10pxbackground: rgba(02000.9)box-shadow: 0 0 30px rgba(025500.5).success font-size: 24pxmargin-bottom: 20px.ip font-size: 18pxmargin-bottom: 30pxcolor: #00ffff.countdown font-size: 16pxcolor: #ffff00a color: #00ff00text-decoration: nonea:hover text-decoration: underline</style> </head> <body> <div class="container"> <div class="success">✅ 代理IP设置成功</div> <div class="ip">已设置代理地址: ${fallbackAddress}:${fallbackPort}</div> <div class="ip" style="color: #ffff00font-size: 14pxmargin-top: 10px;">优先级: 动态设置最高优先级)</div> <div class="countdown">3秒后自动跳转到首页...</div> <script> setTimeout((=> window.location.href = '/'}3000)</script> <p><a href="/">立即返回首页</a></p> </div> </body> </html>`return new Response(responseHtmlstatus: 200headers: 'Content-Type': 'text/htmlcharset=utf-8')else const errorHtml = `<!DOCTYPE html> <html lang="zh-CN"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-widthinitial-scale=1.0"> <title>IP格式错误</title> <style> body font-family: "Courier New"monospacebackground: #000color: #ff4444display: flexjustify-content: centeralign-items: centermin-height: 100vhmargin: 0.container text-align: centerpadding: 40pxborder: 2px solid #ff4444border-radius: 10pxbackground: rgba(20000.9)box-shadow: 0 0 30px rgba(25568680.5).error font-size: 24pxmargin-bottom: 20px.ip font-size: 18pxmargin-bottom: 30pxcolor: #ff6666a color: #ff4444text-decoration: nonea:hover text-decoration: underline</style> </head> <body> <div class="container"> <div class="error">❌ IP格式错误</div> <div class="ip">无效的IP地址: ${proxyIP}</div> <p><a href="/">返回首页</a></p> </div> </body> </html>`return new Response(errorHtmlstatus: 400headers: 'Content-Type': 'text/htmlcharset=utf-8')else const errorHtml = `<!DOCTYPE html> <html lang="zh-CN"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-widthinitial-scale=1.0"> <title>缺少IP参数</title> <style> body font-family: "Courier New"monospacebackground: #000color: #ffaa00display: flexjustify-content: centeralign-items: centermin-height: 100vhmargin: 0.container text-align: centerpadding: 40pxborder: 2px solid #ffaa00border-radius: 10pxbackground: rgba(201000.9)box-shadow: 0 0 30px rgba(25517000.5).warning font-size: 24pxmargin-bottom: 20px.format font-size: 18pxmargin-bottom: 30pxcolor: #ffcc66a color: #ffaa00text-decoration: nonea:hover text-decoration: underline</style> </head> <body> <div class="container"> <div class="warning">⚠️ 缺少IP参数</div> <div class="format">请使用正确的格式: /proxyip=18.183.172.12</div> <p><a href="/">返回首页</a></p> </div> </body> </html>`return new Response(errorHtmlstatus: 400headers: 'Content-Type': 'text/htmlcharset=utf-8')ifurl.pathname === '/'const terminalHtml = `<!DOCTYPE html> <html lang="zh-CN"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-widthinitial-scale=1.0"> <title>终端</title> <style> * margin: 0padding: 0box-sizing: border-boxbody font-family: "Courier New"monospacebackground: #000color: #00ff00min-height: 100vhoverflow-x: hiddenposition: relativedisplay: flexjustify-content: centeralign-items: center.matrix-bg position: fixedtop: 0left: 0width: 100%height: 100%background: linear-gradient(45deg#000 0%#001100 50%#000 100%)z-index: -1animation: bg-pulse 8s ease-in-out infinite@keyframes bg-pulse 0%100% background: linear-gradient(45deg#000 0%#001100 50%#000 100%)50% background: linear-gradient(45deg#000 0%#002200 50%#000 100%).matrix-rain position: fixedtop: 0left: 0width: 100%height: 100%background: repeating-linear-gradient(0degtransparenttransparent 2pxrgba(0,255,0,0.032pxrgba(0,255,0,0.034px)animation: matrix-fall 20s linear infinitez-index: -1@keyframes matrix-fall 0% transform: translateY(-100%)100% transform: translateY(100vh).matrix-code-rain position: fixedtop: 0left: 0width: 100%height: 100%pointer-events: nonez-index: -1overflow: hidden.matrix-column position: absolutetop: -100%left: 0color: #00ff00font-family: "Courier New"monospacefont-size: 14pxline-height: 1.2animation: matrix-drop 15s linear infinitetext-shadow: 0 0 5px #00ff00@keyframes matrix-drop 0% top: -100%opacity: 110% opacity: 190% opacity: 0.3100% top: 100vhopacity: 0.matrix-column:nth-child(oddanimation-duration: 12sanimation-delay: -2s.matrix-column:nth-child(evenanimation-duration: 18sanimation-delay: -5s.matrix-column:nth-child(3nanimation-duration: 20sanimation-delay: -8s.terminal width: 90%max-width: 800pxheight: 500pxbackground: rgba(0000.9)border: 2px solid #00ff00border-radius: 8pxbox-shadow: 0 0 30px rgba(025500.5)inset 0 0 20px rgba(025500.1)backdrop-filter: blur(10px)position: relativez-index: 1overflow: hidden.terminal-header background: rgba(02000.8)padding: 10px 15pxborder-bottom: 1px solid #00ff00display: flexalign-items: center.terminal-buttons display: flexgap: 8px.terminal-button width: 12pxheight: 12pxborder-radius: 50%background: #ff5f57border: none.terminal-button:nth-child(2background: #ffbd2e.terminal-button:nth-child(3background: #28ca42.terminal-title margin-left: 15pxcolor: #00ff00font-size: 14pxfont-weight: bold.terminal-body padding: 20pxheight: calc(100% - 50px)overflow-y: autofont-size: 14pxline-height: 1.4.terminal-line margin-bottom: 8pxdisplay: flexalign-items: center.terminal-prompt color: #00ff00margin-right: 10pxfont-weight: bold.terminal-input background: transparentborder: noneoutline: nonecolor: #00ff00font-family: "Courier New"monospacefont-size: 14pxflex: 1caret-color: #00ff00.terminal-input::placeholder color: #00aa00opacity: 0.7.terminal-cursor display: inline-blockwidth: 8pxheight: 16pxbackground: #00ff00animation: blink 1s infinitemargin-left: 2px@keyframes blink 0%50% opacity: 151%100% opacity: 0.terminal-output color: #00aa00margin: 5px 0.terminal-error color: #ff4444margin: 5px 0.terminal-success color: #44ff44margin: 5px 0.matrix-text position: fixedtop: 20pxright: 20pxcolor: #00ff00font-family: "Courier New"monospacefont-size: 0.8remopacity: 0.6animation: matrix-flicker 3s infinite@keyframes matrix-flicker 0%100% opacity: 0.650% opacity: 1</style> </head> <body> <div class="matrix-bg"></div> <div class="matrix-rain"></div> <div class="matrix-code-rain" id="matrixCodeRain"></div> <div class="matrix-text">终端</div> <div class="terminal"> <div class="terminal-header"> <div class="terminal-buttons"> <div class="terminal-button"></div> <div class="terminal-button"></div> <div class="terminal-button"></div> </div> <div class="terminal-title">终端</div> </div> <div class="terminal-body" id="terminalBody"> <div class="terminal-line"> <span class="terminal-prompt">root:~$</span> <span class="terminal-output">恭喜你来到这</span> </div> <div class="terminal-line"> <span class="terminal-prompt">root:~$</span> <span class="terminal-output">请输入你U变量的值</span> </div> <div class="terminal-line"> <span class="terminal-prompt">root:~$</span> <span class="terminal-output">命令: connect [UUID]</span> </div> <div class="terminal-line"> <span class="terminal-prompt">root:~$</span> <input type="text" class="terminal-input" id="uuidInput" placeholder="输入U变量的内容并且回车..." autofocus> <span class="terminal-cursor"></span> </div> </div> </div> <script> function createMatrixRain(const matrixContainer = document.getElementById('matrixCodeRain')const matrixChars = '01ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'const columns = Math.floor(window.innerWidth / 18)forlet i = 0i < columnsi++const column = document.createElement('div')column.className = 'matrix-column'column.style.left =i * 18+ 'px'column.style.animationDelay = Math.random(* 15 + 's'column.style.animationDuration =Math.random(* 15 + 8+ 's'column.style.fontSize =Math.random(* 4 + 12+ 'px'column.style.opacity = Math.random(* 0.8 + 0.2let text = ''const charCount = Math.floor(Math.random(* 30 + 20)forlet j = 0j < charCountj++const char = matrixChars[Math.floor(Math.random(* matrixChars.length)]const brightness = Math.random(> 0.1 ? '#00ff00' : '#00aa00'text += '<span style="color: ' + brightness + ';">' + char + '</span><br>'column.innerHTML = textmatrixContainer.appendChild(column)setInterval(function(const columns = matrixContainer.querySelectorAll('.matrix-column')columns.forEach(function(columnifMath.random(> 0.95const chars = column.querySelectorAll('span')ifchars.length > 0const randomChar = chars[Math.floor(Math.random(* chars.length)]randomChar.style.color = '#ffffff'setTimeout(function(randomChar.style.color = '#00ff00'}200)})}100)function isValidUUID(uuidconst uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/ireturn uuidRegex.test(uuid)function addTerminalLine(contenttype = 'output'const terminalBody = document.getElementById('terminalBody')const line = document.createElement('div')line.className = 'terminal-line'const prompt = document.createElement('span')prompt.className = 'terminal-prompt'prompt.textContent = 'root:~$'const output = document.createElement('span')output.className = 'terminal-' + typeoutput.textContent = contentline.appendChild(prompt)line.appendChild(output)terminalBody.appendChild(line)terminalBody.scrollTop = terminalBody.scrollHeightfunction handleUUIDInput(const input = document.getElementById('uuidInput')const uuid = input.value.trim()ifuuidaddTerminalLine('connect ' + uuid'output')ifisValidUUID(uuid)addTerminalLine('正在入侵...''output')setTimeout((=> addTerminalLine('连接成功！返回结果...''success')setTimeout((=> window.location.href = '/' + uuid}1000)}500)else addTerminalLine('错误: 无效的UUID格式''error')addTerminalLine('请重新输入有效的UUID''output')input.value = ''document.addEventListener('DOMContentLoaded'function(createMatrixRain()const input = document.getElementById('uuidInput')input.addEventListener('keypress'function(eife.key === 'Enter'handleUUIDInput()})})</script> </body> </html>`return new Response(terminalHtmlstatus: 200headers: 'Content-Type': 'text/htmlcharset=utf-8')ifurl.pathname.length > 1 && url.pathname !== '/' && !url.pathname.includes('/sub')const user = url.pathname.replace(/\/$/'').substring(1)ifisValidFormat(user)ifuser === authTokenreturn await handleSubscriptionPage(requestuser)else return new Response('UUID错误 请注意变量名称是u不是uuid'status: 403)ifurl.pathname.includes('/sub')const pathParts = url.pathname.split('/')ifpathParts.length === 2 && pathParts[1] === 'sub'const user = pathParts[0].substring(1)ifisValidFormat(user)ifuser === authTokenreturn await handleSubscriptionRequest(requestuserurl)else return new Response('UUID错误'status: 403)ifurl.pathname.toLowerCase().includes(`/${subPath}`)return await handleSubscriptionRequest(requestauthToken)return new Response('Not Found'status: 404)}}async function handleSubscriptionRequest(requestuserurl = nullif!urlurl = new URL(request.url)const finalLinks = []const workerDomain = url.hostnameconst nativeList = [ip: workerDomainisp: '原生地址']finalLinks.push(...generateLinksFromSource(nativeListuserworkerDomain))iffinalLinks.length === 0const errorRemark = "所有节点获取失败"const proto = atob('dmxlc3M=')const errorLink = `${proto}://00000000-0000-0000-0000-000000000000@127.0.0.1:80?encryption=none&security=none&type=ws&host=error.com&path=%2F#${encodeURIComponent(errorRemark)}`finalLinks.push(errorLink)let subscriptionContentlet contentType = 'text/plaincharset=utf-8'subscriptionContent = btoa(finalLinks.join('\n'))return new Response(subscriptionContentheaders: 'Content-Type': contentType'Cache-Control': 'no-storeno-cachemust-revalidatemax-age=0'}})function generateLinksFromSource(listuserworkerDomainconst defaultHttpsPorts = [443]const defaultHttpPorts = []const links = []const wsPath = encodeURIComponent('/?ed=2048')const proto = atob('dmxlc3M=')list.forEach(item => const nodeNameBase = item.isp.replace(/\s/g'_')const safeIP = item.ip.includes(':'? `[${item.ip}]` : item.iplet httpsPortshttpPortsifitem.porthttpsPorts = [item.port]httpPorts = []else httpsPorts = defaultHttpsPortshttpPorts = defaultHttpPortshttpsPorts.forEach(port => const wsNodeName = `${nodeNameBase}-${port}-WS-TLS`const wsParams = new URLSearchParams(encryption: 'none'security: 'tls'sni: workerDomainfp: 'randomized'type: 'ws'host: workerDomainpath: wsPath)links.push(`${proto}://${user}@${safeIP}:${port}?${wsParams.toString()}#${encodeURIComponent(wsNodeName)}`)})httpPorts.forEach(port => const wsNodeName = `${nodeNameBase}-${port}-WS`const wsParams = new URLSearchParams(encryption: 'none'security: 'none'type: 'ws'host: workerDomainpath: wsPath)links.push(`${proto}://${user}@${safeIP}:${port}?${wsParams.toString()}#${encodeURIComponent(wsNodeName)}`)})})return linksasync function handleWsRequest(requestconst wsPair = new WebSocketPair()const [clientSockserverSock] = Object.values(wsPair)serverSock.accept()let remoteConnWrapper = socket: nulllet isDnsQuery = falseconst earlyData = request.headers.get('sec-websocket-protocol'|| ''const readable = makeReadableStream(serverSockearlyData)readable.pipeTo(new WritableStream(async write(chunkifisDnsQueryreturn await forwardUDP(chunkserverSocknull)ifremoteConnWrapper.socketconst writer = remoteConnWrapper.socket.writable.getWriter()await writer.write(chunk)writer.releaseLock()returnconst hasErrormessageporthostnamerawIndexversionisUDP = parseWsPacketHeader(chunkauthToken)ifhasErrorthrow new Error(message)ifisUDPifport === 53isDnsQuery = trueelse throw new Error(E_UDP_DNS_ONLY)const respHeader = new Uint8Array([version[0]0])const rawData = chunk.slice(rawIndex)ifisDnsQueryreturn forwardUDP(rawDataserverSockrespHeader)await forwardTCP(hostnameportrawDataserverSockrespHeaderremoteConnWrapper)}})).catch((ex=>)return new Response(nullstatus: 101webSocket: clientSock)async function forwardTCP(hostportNumrawDatawsrespHeaderremoteConnWrapperasync function connectAndSend(addressportconst remoteSock = connect(hostname: addressport: port)const writer = remoteSock.writable.getWriter()await writer.write(rawData)writer.releaseLock()return remoteSockasync function retryConnection(const backupHost = fallbackAddress || hostconst backupPort = parseInt(fallbackPort10|| portNumconst fallbackSocket = await connectAndSend(backupHostbackupPort)remoteConnWrapper.socket = fallbackSocketfallbackSocket.closed.catch((=>}).finally((=> closeSocketQuietly(ws))connectStreams(fallbackSocketwsrespHeadernull)const initialSocket = await connectAndSend(hostportNum)remoteConnWrapper.socket = initialSocketconnectStreams(initialSocketwsrespHeaderretryConnection)function parseWsPacketHeader(chunktokenifchunk.byteLength < 24return hasError: truemessage: E_INVALID_DATAconst version = new Uint8Array(chunk.slice(01))ifformatIdentifier(new Uint8Array(chunk.slice(117))!== tokenreturn hasError: truemessage: E_INVALID_USERconst optLen = new Uint8Array(chunk.slice(1718))[0]const cmd = new Uint8Array(chunk.slice(18 + optLen19 + optLen))[0]let isUDP = falseifcmd === 1{else ifcmd === 2isUDP = trueelse return hasError: truemessage: E_UNSUPPORTED_CMDconst portIdx = 19 + optLenconst port = new DataView(chunk.slice(portIdxportIdx + 2)).getUint16(0)let addrIdx = portIdx + 2addrLen = 0addrValIdx = addrIdx + 1hostname = ''const addressType = new Uint8Array(chunk.slice(addrIdxaddrValIdx))[0]switchaddressTypecase ADDRESS_TYPE_IPV4: addrLen = 4hostname = new Uint8Array(chunk.slice(addrValIdxaddrValIdx + addrLen)).join('.')breakcase ADDRESS_TYPE_URL: addrLen = new Uint8Array(chunk.slice(addrValIdxaddrValIdx + 1))[0]addrValIdx += 1hostname = new TextDecoder().decode(chunk.slice(addrValIdxaddrValIdx + addrLen))breakcase ADDRESS_TYPE_IPV6: addrLen = 16const ipv6 = []const ipv6View = new DataView(chunk.slice(addrValIdxaddrValIdx + addrLen))forlet i = 0i < 8i++ipv6.push(ipv6View.getUint16(i * 2).toString(16))hostname = ipv6.join(':')breakdefault: return hasError: truemessage: `${E_INVALID_ADDR_TYPE}: ${addressType}`if!hostnamereturn hasError: truemessage: `${E_EMPTY_ADDR}: ${addressType}`return hasError: falseporthostnameisUDPrawIndex: addrValIdx + addrLenversionfunction makeReadableStream(socketearlyDataHeaderlet cancelled = falsereturn new ReadableStream(start(controllersocket.addEventListener('message'(event=> if!cancelledcontroller.enqueue(event.data)})socket.addEventListener('close'(=> if!cancelledcloseSocketQuietly(socket)controller.close()})socket.addEventListener('error'(err=> controller.error(err))const earlyDataerror = base64ToArray(earlyDataHeader)iferrorcontroller.error(error)else ifearlyDatacontroller.enqueue(earlyData)}cancel(cancelled = truecloseSocketQuietly(socket)})async function connectStreams(remoteSocketwebSocketheaderDataretryFunclet header = headerDatahasData = falseawait remoteSocket.readable.pipeTonew WritableStream(async write(chunkcontrollerhasData = trueifwebSocket.readyState !== 1controller.error(E_WS_NOT_OPEN)ifheaderwebSocket.send(await new Blob([headerchunk]).arrayBuffer())header = nullelse webSocket.send(chunk)}abort(reasonconsole.error("Readable aborted:"reason)}}).catch((e=> console.error("Stream connection error:"e)closeSocketQuietly(webSocket)})if!hasData && retryFuncretryFunc()async function forwardUDP(udpChunkwebSocketrespHeaderconst tcpSocket = connect(hostname: '8.8.4.4'port: 53)let header = respHeaderconst writer = tcpSocket.writable.getWriter()await writer.write(udpChunk)writer.releaseLock()await tcpSocket.readable.pipeTo(new WritableStream(async write(chunkifwebSocket.readyState === 1ifheaderwebSocket.send(await new Blob([headerchunk]).arrayBuffer())header = nullelse webSocket.send(chunk)}}))async function handleSubscriptionPage(requestuser = nullif!useruser = authTokenconst pageHtml = `<!DOCTYPE html> <html lang="zh-CN"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-widthinitial-scale=1.0"> <title>订阅中心</title> <style> * margin: 0padding: 0box-sizing: border-boxbody font-family: "Courier New"monospacebackground: #000color: #00ff00min-height: 100vhoverflow-x: hiddenposition: relative.matrix-bg position: fixedtop: 0left: 0width: 100%height: 100%background: linear-gradient(45deg#000 0%#001100 50%#000 100%)z-index: -1animation: bg-pulse 8s ease-in-out infinite@keyframes bg-pulse 0%100% background: linear-gradient(45deg#000 0%#001100 50%#000 100%)50% background: linear-gradient(45deg#000 0%#002200 50%#000 100%).matrix-rain position: fixedtop: 0left: 0width: 100%height: 100%background: repeating-linear-gradient(0degtransparenttransparent 2pxrgba(0,255,0,0.032pxrgba(0,255,0,0.034px)animation: matrix-fall 20s linear infinitez-index: -1@keyframes matrix-fall 0% transform: translateY(-100%)100% transform: translateY(100vh).matrix-code-rain position: fixedtop: 0left: 0width: 100%height: 100%pointer-events: nonez-index: -1overflow: hidden.matrix-column position: absolutetop: -100%left: 0color: #00ff00font-family: "Courier New"monospacefont-size: 14pxline-height: 1.2animation: matrix-drop 15s linear infinitetext-shadow: 0 0 5px #00ff00@keyframes matrix-drop 0% top: -100%opacity: 110% opacity: 190% opacity: 0.3100% top: 100vhopacity: 0.matrix-column:nth-child(oddanimation-duration: 12sanimation-delay: -2s.matrix-column:nth-child(evenanimation-duration: 18sanimation-delay: -5s.matrix-column:nth-child(3nanimation-duration: 20sanimation-delay: -8s.container max-width: 900pxmargin: 0 autopadding: 20pxposition: relativez-index: 1.header text-align: centermargin-bottom: 40px.title font-size: 3.5remfont-weight: boldtext-shadow: 0 0 10px #00ff000 0 20px #00ff000 0 30px #00ff000 0 40px #00ff00margin-bottom: 10pxanimation: matrix-glow 1.5s ease-in-out infinite alternatematrix-pulse 3s ease-in-out infiniteposition: relativebackground: linear-gradient(45deg#00ff00#00aa00#00ff00)background-size: 200% 200%-webkit-background-clip: text-webkit-text-fill-color: transparentbackground-clip: text@keyframes matrix-glow from text-shadow: 0 0 10px #00ff000 0 20px #00ff000 0 30px #00ff000 0 40px #00ff00to text-shadow: 0 0 20px #00ff000 0 30px #00ff000 0 40px #00ff000 0 50px #00ff00@keyframes matrix-pulse 0%100% background-position: 0% 50%50% background-position: 100% 50%.subtitle color: #00aa00margin-bottom: 30pxfont-size: 1.2rem.card background: rgba(02000.9)border: 2px solid #00ff00border-radius: 0padding: 30pxmargin-bottom: 20pxbox-shadow: 0 0 30px rgba(025500.5)inset 0 0 20px rgba(025500.1)position: relativebackdrop-filter: blur(10px)animation: card-glow 4s ease-in-out infinite@keyframes card-glow 0%100% box-shadow: 0 0 30px rgba(025500.5)inset 0 0 20px rgba(025500.1)50% box-shadow: 0 0 40px rgba(025500.7)inset 0 0 30px rgba(025500.2).card::before content: ""position: absolutetop: 0left: 0width: 100%height: 100%background: linear-gradient(45degtransparent 49%#00ff00 50%transparent 51%)opacity: 0.2pointer-events: noneanimation: scan-line 3s linear infinite@keyframes scan-line 0% transform: translateX(-100%)100% transform: translateX(100%).card-title font-size: 1.8remmargin-bottom: 20pxcolor: #00ff00text-shadow: 0 0 5px #00ff00.client-grid display: gridgrid-template-columns: repeat(auto-fitminmax(140px1fr))gap: 15pxmargin: 20px 0.client-btn background: rgba(02000.8)border: 2px solid #00ff00padding: 15px 20pxcolor: #00ff00font-family: "Courier New"monospacefont-weight: boldcursor: pointertransition: all 0.4s easetext-align: centerposition: relativeoverflow: hiddentext-shadow: 0 0 5px #00ff00box-shadow: 0 0 10px rgba(025500.3).client-btn::before content: ""position: absolutetop: 0left: -100%width: 100%height: 100%background: linear-gradient(90degtransparentrgba(0,255,0,0.4)transparent)transition: left 0.6s ease.client-btn::after content: ""position: absolutetop: 0left: 0width: 100%height: 100%background: linear-gradient(45degtransparent 30%rgba(0,255,0,0.150%transparent 70%)opacity: 0transition: opacity 0.3s ease.client-btn:hover::before left: 100%.client-btn:hover::after opacity: 1.client-btn:hover background: rgba(025500.3)box-shadow: 0 0 25px #00ff000 0 35px rgba(025500.5)transform: translateY(-3pxscale(1.05)text-shadow: 0 0 10px #00ff000 0 20px #00ff00.generate-btn background: rgba(025500.15)border: 2px solid #00ff00padding: 15px 30pxcolor: #00ff00font-family: "Courier New"monospacefont-weight: boldcursor: pointertransition: all 0.4s easemargin-right: 15pxtext-shadow: 0 0 8px #00ff00box-shadow: 0 0 15px rgba(025500.4)position: relativeoverflow: hidden.generate-btn::before content: ""position: absolutetop: 0left: -100%width: 100%height: 100%background: linear-gradient(90degtransparentrgba(0,255,0,0.5)transparent)transition: left 0.8s ease.generate-btn:hover::before left: 100%.generate-btn:hover background: rgba(025500.4)box-shadow: 0 0 30px #00ff000 0 40px rgba(025500.6)transform: translateY(-4pxscale(1.08)text-shadow: 0 0 15px #00ff000 0 25px #00ff00.subscription-url background: rgba(0000.9)border: 2px solid #00ff00padding: 15pxword-break: break-allfont-family: "Courier New"monospacecolor: #00ff00margin-top: 20pxdisplay: nonebox-shadow: inset 0 0 15px rgba(025500.4)0 0 20px rgba(025500.3)border-radius: 5pxanimation: url-glow 2s ease-in-out infinite alternateposition: relativeoverflow: hidden@keyframes url-glow from box-shadow: inset 0 0 15px rgba(025500.4)0 0 20px rgba(025500.3)to box-shadow: inset 0 0 20px rgba(025500.6)0 0 30px rgba(025500.5).subscription-url::before content: ""position: absolutetop: 0left: -100%width: 100%height: 100%background: linear-gradient(90degtransparentrgba(0,255,0,0.1)transparent)animation: url-scan 3s linear infinite@keyframes url-scan 0% left: -100%100% left: 100%.matrix-text position: fixedtop: 20pxright: 20pxcolor: #00ff00font-family: "Courier New"monospacefont-size: 0.8remopacity: 0.6animation: matrix-flicker 3s infinite@keyframes matrix-flicker 0%100% opacity: 0.650% opacity: 1</style> </head> <body> <div class="matrix-bg"></div> <div class="matrix-rain"></div> <div class="matrix-code-rain" id="matrixCodeRain"></div> <div class="matrix-text">代理订阅中心 v1.1</div> <div class="container"> <div class="header"> <h1 class="title">代理订阅中心</h1> <p class="subtitle">Base64订阅 • 简单稳定 • 一键生成</p> </div> <div class="card"> <h2 class="card-title">[ 选择客户端 ]</h2> <div class="client-grid"> <button class="client-btn" onclick="generateClientLink()">获取订阅链接</button> </div> <div class="subscription-url" id="clientSubscriptionUrl"></div> </div> <div class="card"> <h2 class="card-title">[ 快速获取 ]</h2> <button class="generate-btn" onclick="getBase64Subscription()">获取订阅链接</button> <div class="subscription-url" id="base64SubscriptionUrl"></div> </div> <div class="card"> <h2 class="card-title">[ 系统状态 ]</h2> <div id="systemStatus" style="margin: 20px 0padding: 15pxbackground: rgba(02000.8)border: 2px solid #00ff00box-shadow: 0 0 20px rgba(025500.3)inset 0 0 15px rgba(025500.1)position: relativeoverflow: hidden;"> <div style="color: #00ff00margin-bottom: 15pxfont-weight: boldtext-shadow: 0 0 5px #00ff00;">[ 系统检测中... ]</div> <div id="regionStatus" style="margin: 8px 0color: #00ff00font-family: 'Courier New'monospacetext-shadow: 0 0 3px #00ff00;">Worker地区: 检测中...</div> <div id="geoInfo" style="margin: 8px 0color: #00aa00font-family: 'Courier New'monospacefont-size: 0.9remtext-shadow: 0 0 3px #00aa00;">检测方式: 检测中...</div> <div id="backupStatus" style="margin: 8px 0color: #00ff00font-family: 'Courier New'monospacetext-shadow: 0 0 3px #00ff00;">ProxyIP状态: 检测中...</div> <div id="currentIP" style="margin: 8px 0color: #00ff00font-family: 'Courier New'monospacetext-shadow: 0 0 3px #00ff00;">当前使用IP: 检测中...</div> <div id="regionMatch" style="margin: 8px 0color: #00ff00font-family: 'Courier New'monospacetext-shadow: 0 0 3px #00ff00;">地区匹配: 检测中...</div> <div id="selectionLogic" style="margin: 8px 0color: #00aa00font-family: 'Courier New'monospacefont-size: 0.9remtext-shadow: 0 0 3px #00aa00;">选择逻辑: 使用固定配置地址</div> </div> </div> <div class="card"> <h2 class="card-title">[ 相关链接 ]</h2> <div style="text-align: centermargin: 20px 0;"> <a href="https://github.com/byJoey/cfnew" target="_blank" style="color: #00ff00text-decoration: nonemargin: 0 20pxfont-size: 1.2remtext-shadow: 0 0 5px #00ff00;">GitHub 项目</a> <a href="https://www.youtube.com/@joeyblog" target="_blank" style="color: #00ff00text-decoration: nonemargin: 0 20pxfont-size: 1.2remtext-shadow: 0 0 5px #00ff00;">YouTube @joeyblog</a> </div> </div> </div> <script> function generateClientLink(clientTypevar currentUrl = window.location.hrefvar subscriptionUrl = currentUrl + "/sub"document.getElementById("clientSubscriptionUrl").textContent = subscriptionUrldocument.getElementById("clientSubscriptionUrl").style.display = "block"navigator.clipboard.writeText(subscriptionUrl).then(function(alert("Base64订阅链接已复制")})function getBase64Subscription(var currentUrl = window.location.hrefvar subscriptionUrl = currentUrl + "/sub"fetch(subscriptionUrl.then(function(responsereturn response.text()}.then(function(base64Contentdocument.getElementById("base64SubscriptionUrl").textContent = base64Contentdocument.getElementById("base64SubscriptionUrl").style.display = "block"navigator.clipboard.writeText(base64Content).then(function(alert("Base64订阅内容已复制")})}.catch(function(econsole.error("获取订阅失败:"e)alert("获取订阅失败，请重试")})function createMatrixRain(const matrixContainer = document.getElementById('matrixCodeRain')const matrixChars = '01ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'const columns = Math.floor(window.innerWidth / 18)forlet i = 0i < columnsi++const column = document.createElement('div')column.className = 'matrix-column'column.style.left =i * 18+ 'px'column.style.animationDelay = Math.random(* 15 + 's'column.style.animationDuration =Math.random(* 15 + 8+ 's'column.style.fontSize =Math.random(* 4 + 12+ 'px'column.style.opacity = Math.random(* 0.8 + 0.2let text = ''const charCount = Math.floor(Math.random(* 30 + 20)forlet j = 0j < charCountj++const char = matrixChars[Math.floor(Math.random(* matrixChars.length)]const brightness = Math.random(> 0.1 ? '#00ff00' : '#00aa00'text += '<span style="color: ' + brightness + ';">' + char + '</span><br>'column.innerHTML = textmatrixContainer.appendChild(column)setInterval(function(const columns = matrixContainer.querySelectorAll('.matrix-column')columns.forEach(function(columnifMath.random(> 0.95const chars = column.querySelectorAll('span')ifchars.length > 0const randomChar = chars[Math.floor(Math.random(* chars.length)]randomChar.style.color = '#ffffff'setTimeout(function(randomChar.style.color = '#00ff00'}200)})}100)async function checkSystemStatus(try const regionStatus = document.getElementById('regionStatus')const geoInfo = document.getElementById('geoInfo')const backupStatus = document.getElementById('backupStatus')const currentIP = document.getElementById('currentIP')const regionMatch = document.getElementById('regionMatch')try const response = await fetch('/region')const data = await response.json()ifdata.mode === 'DYNAMIC'geoInfo.innerHTML = '运行模式: <span style="color: #00ffff;">🚀 动态设置模式</span>'regionStatus.innerHTML = '服务状态: <span style="color: #00ffff;">⭐ 动态IP已设置)</span>'backupStatus.innerHTML = '备用地址: <span style="color: #00ffff;">✅ ' + data.customIP + '</span>'currentIP.innerHTML = '来源: <span style="color: #00ffff;">' + data.source + '</span>'regionMatch.innerHTML = '优先级: <span style="color: #00ffff;">🎯 动态设置 > 默认</span>'else geoInfo.innerHTML = '运行模式: <span style="color: #44ff44;">🔵 默认模式</span>'regionStatus.innerHTML = '服务状态: <span style="color: #44ff44;">✅ 正常运行未设置)</span>'backupStatus.innerHTML = '备用地址: <span style="color: #44ff44;">📍 使用原始地址</span>'currentIP.innerHTML = 'IP选择: <span style="color: #44ff44;">🔗 直接连接</span>'regionMatch.innerHTML = '优先级: <span style="color: #44ff44;">📊 动态设置 > 默认</span>'catchegeoInfo.innerHTML = '运行模式: <span style="color: #ff4444;">❌ 检测失败</span>'regionStatus.innerHTML = '服务状态: <span style="color: #ff4444;">❌ 检测失败</span>'catcheconsole.error('状态检测失败:'e)document.getElementById('regionStatus').innerHTML = '服务状态: <span style="color: #ff4444;">❌ 检测失败</span>'document.getElementById('geoInfo').innerHTML = '运行模式: <span style="color: #ff4444;">❌ 检测失败</span>'document.getElementById('backupStatus').innerHTML = '备用地址: <span style="color: #ff4444;">❌ 检测失败</span>'document.getElementById('currentIP').innerHTML = 'IP选择: <span style="color: #ff4444;">❌ 检测失败</span>'document.getElementById('regionMatch').innerHTML = '优先级: <span style="color: #ff4444;">❌ 检测失败</span>'document.addEventListener('DOMContentLoaded'function(createMatrixRain()checkSystemStatus()})</script> </body> </html>`return new Response(pageHtmlstatus: 200headers: 'Content-Type': 'text/htmlcharset=utf-8')function base64ToArray(b64Strif!b64Strreturn error: nullb64Str = b64Str.replace(/-/g'+').replace(/_/g'/')return earlyData: Uint8Array.from(atob(b64Str)(c=> c.charCodeAt(0)).buffererror: nullfunction closeSocketQuietly(socketifsocket.readyState === 1 || socket.readyState === 2socket.close()const hexTable = Array.from(length: 256(vi=>i + 256).toString(16).slice(1))function formatIdentifier(arroffset = 0const id =hexTable[arr[offset]]+hexTable[arr[offset+1]]+hexTable[arr[offset+2]]+hexTable[arr[offset+3]]+"-"+hexTable[arr[offset+4]]+hexTable[arr[offset+5]]+"-"+hexTable[arr[offset+6]]+hexTable[arr[offset+7]]+"-"+hexTable[arr[offset+8]]+hexTable[arr[offset+9]]+"-"+hexTable[arr[offset+10]]+hexTable[arr[offset+11]]+hexTable[arr[offset+12]]+hexTable[arr[offset+13]]+hexTable[arr[offset+14]]+hexTable[arr[offset+15]]).toLowerCase()if!isValidFormat(id)throw new TypeError(E_INVALID_ID_STR)return id}