name: 混淆最新版本源码并集成KV支持

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # 每天UTC时间2点自动运行

jobs:
  obfuscate-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 安装依赖
        run: |
          npm install -g javascript-obfuscator
          npm install axios

      - name: 备份原始文件
        run: |
          if [ -f "_worker.js" ]; then
            cp _worker.js _worker.js.backup.$(date +%Y%m%d_%H%M%S)
            echo "✅ 原始文件已备份"
          fi

      - name: 下载最新官方源码
        run: |
          # 替换为实际的官方源码URL
          OFFICIAL_URL="https://github.com/cmliu/edgetunnel/blob/main/_worker.js"
          curl -s "$OFFICIAL_URL" -o 明文源码.js
          
          if [ ! -s "明文源码.js" ]; then
            echo "❌ 下载官方源码失败"
            exit 1
          fi
          echo "✅ 官方源码下载成功"

      - name: 混淆代码
        run: |
          javascript-obfuscator 明文源码.js --output _worker_temp.js \
          --compact true \
          --control-flow-flattening true \
          --control-flow-flattening-threshold 1 \
          --dead-code-injection true \
          --dead-code-injection-threshold 1 \
          --identifier-names-generator hexadecimal \
          --rename-globals true \
          --string-array true \
          --string-array-encoding 'rc4' \
          --string-array-threshold 1 \
          --transform-object-keys true \
          --unicode-escape-sequence true
          
          echo "✅ 代码混淆完成"

      - name: 应用KV支持功能
        run: |
          # 使用Node.js脚本应用KV支持
          node update_kv_worker.js _worker_temp.js _worker.js
          
          # 清理临时文件
          rm -f _worker_temp.js 明文源码.js
          echo "✅ KV支持功能已应用"

      - name: 验证语法
        run: node -c _worker.js

      - name: 测试KV功能
        run: |
          # 验证KV相关功能是否存在
          if grep -q "env\.KV" _worker.js && grep -q "PROXYIP" _worker.js; then
            echo "✅ KV功能验证通过"
          else
            echo "❌ KV功能未正确应用"
            exit 1
          fi

      - name: 提交更改
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add _worker.js
          if git diff --cached --quiet; then
            echo "🟡 无文件更改，跳过提交"
          else
            git commit -m "🔧 [自动化] 混淆代码并集成KV支持功能 - $(date +%Y-%m-%d)"
            echo "✅ 更改已提交"
          fi

      - name: 推送更改
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: 清理工作区
        run: |
          # 保留最近5个备份文件
          ls -t _worker.js.backup.* | tail -n +6 | xargs rm -f 2>/dev/null || true
          echo "✅ 工作区清理完成"
