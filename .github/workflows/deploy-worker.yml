name: 混淆并应用KV补丁

on:
  workflow_dispatch:
    inputs:
      branch:
        description: '要处理的分支'
        required: true
        default: 'main'

jobs:
  process:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || 'main' }}
        fetch-depth: 0

    - name: 使用 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"

    - name: 下载最新源码
      run: |
        echo "下载最新原始代码..."
        curl -s -o _worker.js https://raw.githubusercontent.com/cmliu/edgetunnel/main/_worker.js
        echo "✅ 源码下载完成"

    - name: 应用KV PROXYIP补丁
      id: apply-patch
      run: |
        echo "开始应用KV PROXYIP补丁..."
        
        # 方法1: 使用智能脚本
        if node scripts/apply-to-original.js; then
          echo "✅ 智能脚本应用成功"
          echo "patch_applied=true" >> $GITHUB_OUTPUT
        else
          echo "❌ 智能脚本失败，尝试Git补丁..."
          
          # 方法2: Git补丁
          if [ -f kv_proxyip_feature_correct.patch ] && git apply --check kv_proxyip_feature_correct.patch; then
            git apply kv_proxyip_feature_correct.patch
            echo "✅ Git补丁应用成功"
            echo "patch_applied=true" >> $GITHUB_OUTPUT
          else
            echo "❌ 所有补丁方法失败"
            echo "patch_applied=false" >> $GITHUB_OUTPUT
            exit 1
          fi
        fi

    - name: 安装混淆工具
      run: npm install -g javascript-obfuscator

    - name: 混淆代码
      run: |
        echo "开始混淆代码..."
        
        # 备份补丁后的代码
        cp _worker.js _worker_patched.js
        
        # 混淆处理
        javascript-obfuscator _worker_patched.js --output _worker.js \
          --compact true \
          --control-flow-flattening true \
          --control-flow-flattening-threshold 0.7 \
          --dead-code-injection true \
          --dead-code-injection-threshold 0.4 \
          --identifier-names-generator hexadecimal \
          --rename-globals true \
          --self-defending true \
          --string-array true \
          --string-array-encoding 'rc4' \
          --string-array-threshold 0.7 \
          --transform-object-keys true \
          --unicode-escape-sequence true
        
        echo "✅ 代码混淆完成"

    - name: 验证结果
      run: |
        if [ -f _worker.js ] && [ -s _worker.js ]; then
          echo "✅ 最终文件生成成功"
          echo "文件大小: $(wc -c < _worker.js) 字节"
          echo "包含KV功能: $(grep -c 'PROXYIP' _worker.js || echo 0)"
        else
          echo "❌ 文件生成失败"
          exit 1
        fi

    - name: 提交更改
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add _worker.js
        
        if git diff --cached --quiet; then
          echo "没有文件更改，跳过提交"
        else
          git commit -m "chore: 应用KV补丁并混淆代码 [自动化]"
          echo "✅ 更改已提交"
        fi

    - name: 推送更改
      if: success()
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.event.inputs.branch || 'main' }}

    - name: 上传制品
      uses: actions/upload-artifact@v4
      with:
        name: processed-worker
        path: |
          _worker.js
          _worker_patched.js
        retention-days: 7
