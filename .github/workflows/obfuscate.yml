name: Generate and Obfuscate Worker Script

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  build-and-obfuscate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Obfuscator
        run: npm install javascript-obfuscator

      - name: Obfuscate from local source file
        run: |
          node -e "
            const JavaScriptObfuscator = require('javascript-obfuscator');
            const fs = require('fs');
            const path = require('path');
            
            const sourceFileName = '明文源吗.js';
            const outputFileName = '_worker.js';
            const sourceFilePath = path.join(process.cwd(), sourceFileName);

            if (!fs.existsSync(sourceFilePath)) {
              console.error('错误：在路径 \'' + sourceFilePath + '\' 未找到源文件。请确保您的仓库根目录有名为 \'明文源吗.js\' 的文件。');
              process.exit(1);
            }

            const originalCode = fs.readFileSync(sourceFilePath, 'utf8');

            if (!originalCode || originalCode.trim().length === 0) {
              console.error('错误：源文件 ' + sourceFileName + ' 为空。');
              process.exit(1);
            }

            // --- 最安全混淆配置 ---
            const obfuscationOptions = {
                compact: false,
                controlFlowFlattening: false,
                deadCodeInjection: false,
                stringArray: false,
                renameGlobals: false,
                identifierNamesGenerator: 'hexadecimal',
                rotateStringArray: false,
                shuffleStringArray: false,
                unicodeEscapeSequence: false,
                simplify: false,
                target: 'browser'
            };

            console.log('开始混淆代码...');
          console.log('源文件大小:', originalCode.length, '字符');

          try {
              const obfuscationResult = JavaScriptObfuscator.obfuscate(originalCode, obfuscationOptions);
              const obfuscatedCode = obfuscationResult.getObfuscatedCode();
              console.log('混淆成功，输出大小:', obfuscatedCode.length, '字符');

              fs.writeFileSync(path.join(process.cwd(), outputFileName), obfuscatedCode, 'utf8');
              console.log('成功将 \'' + sourceFileName + '\' 混淆并保存至 \'' + outputFileName + '\'。');
          } catch (obfuscationError) {
              console.error('混淆失败:', obfuscationError.message);
              console.error('错误详情:', obfuscationError.stack);
              console.log('尝试使用最小混淆配置...');

              const minimalOptions = {
                  compact: false,
                  identifierNamesGenerator: 'hexadecimal'
              };

              const fallbackResult = JavaScriptObfuscator.obfuscate(originalCode, minimalOptions);
              const fallbackCode = fallbackResult.getObfuscatedCode();

              fs.writeFileSync(path.join(process.cwd(), outputFileName), fallbackCode, 'utf8');
              console.log('使用最小配置成功将 \'' + sourceFileName + '\' 混淆并保存至 \'' + outputFileName + '\'。');
          }
          "

      - name: Commit and push the obfuscated file
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add '_worker.js'
          if git diff --staged --quiet; then
            echo "No changes to commit, the obfuscated file is already up-to-date."
          else
            git commit -m "build: Generate and obfuscate worker script"
            git push
          fi
