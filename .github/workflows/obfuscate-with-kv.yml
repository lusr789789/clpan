name: 混淆当前版本源码
on:
    workflow_dispatch:

jobs:
  update-worker:
    runs-on: ubuntu-latest

    steps:
      # 1. 拉取仓库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 安装 Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. 下载原始 _worker.js
      - name: Fetch original _worker.js
        run: |
          curl --retry 5 --retry-delay 5 -L https://raw.githubusercontent.com/cmliu/edgetunnel/main/_worker.js -o _worker.js

      # 4. 替换 proxyIP 逻辑
      - name: Patch proxyIP logic
        run: |
          node -e "
          const fs = require('fs');
          const path = '_worker.js';
          let content = fs.readFileSync(path, 'utf8');

          // 新的 proxyIP 逻辑
          const newLogic = `
let proxyIP = '';
let proxyIPPool = [];
try {
    const envProxy = env.PROXYIP || env.proxyip || proxyIP;
    if (envProxy && envProxy.trim()) {
        proxyIP = envProxy;
        try {
            proxyIPPool = (await 整理(proxyIP)).filter(Boolean);
        } catch (err) {
            console.error('解析 env PROXYIP 失败:', err);
            proxyIPPool = proxyIP.split(/\\r?\\n/).map(l => l.trim()).filter(Boolean);
        }
    } else if (env.KV) {
        const kvProxy = await env.KV.get('PROXYIP');
        if (kvProxy) {
            const lines = kvProxy.split(/\\r?\\n/).map(l => l.trim()).filter(Boolean);
            proxyIP = lines.length > 0 ? lines[0] : '';
            try {
                proxyIPPool = (await 整理(kvProxy)).filter(Boolean);
            } catch (err) {
                console.error('解析 KV PROXYIP 失败:', err);
                proxyIPPool = lines.slice();
            }
        }
    }
} catch(e) {
    console.error('读取 PROXYIP 配置失败:', e);
}
proxyIP = (proxyIPPool && proxyIPPool.length > 0) ? proxyIPPool[Math.floor(Math.random() * proxyIPPool.length)] : '';
`;

          // 在文件开头插入新的逻辑
          content = newLogic + '\n' + content;

          // 保存到根目录
          fs.writeFileSync(path, content, 'utf8');
          console.log('_worker.js 已更新');
          "
