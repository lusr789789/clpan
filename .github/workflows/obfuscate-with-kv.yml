name: 仅更新KV支持功能

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # 每天UTC时间2点自动运行

jobs:
  update-kv-support:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 备份原始文件
        run: |
          if [ -f "_worker.js" ]; then
            cp _worker.js _worker.js.backup.$(date +%Y%m%d_%H%M%S)
            echo "✅ 原始文件已备份"
          fi

      - name: 下载最新官方源码
        run: |
          # 替换为实际的官方源码URL
          OFFICIAL_URL="https://raw.githubusercontent.com/cmliu/edgetunnel/main/_worker.js"
          curl -s "$OFFICIAL_URL" -o _worker_official.js
          
          if [ ! -s "_worker_official.js" ]; then
            echo "❌ 下载官方源码失败"
            exit 1
          fi
          echo "✅ 官方源码下载成功"

      - name: 应用KV支持功能
        run: |
          # 应用KV支持到官方代码
          node update_kv_worker.js _worker_official.js _worker.js
          echo "✅ KV支持功能已应用"
          
          # 修复Unicode转义序列（如果fix_unicode.js存在）
          if [ -f "fix_unicode.js" ]; then
            node fix_unicode.js _worker.js
            echo "✅ Unicode转义序列已修复"
          else
            echo "⚠️  fix_unicode.js 不存在，跳过Unicode修复"
          fi
          
          # 清理临时文件
          rm -f _worker_official.js

      - name: 验证文件
        run: |
          if [ -f "_worker.js" ] && [ -s "_worker.js" ]; then
            echo "✅ 文件验证通过"
            echo "文件大小: $(wc -c < _worker.js) 字节"
          else
            echo "❌ 文件生成失败"
            exit 1
          fi

      - name: 更新wrangler.toml名称
        run: |
          # 在wrangler.toml的name中添加时间戳
          if [ -f "wrangler.toml" ]; then
            TIMESTAMP=$(date +%Y%m%d-%H%M)
            # 获取当前名称并添加时间戳
            CURRENT_NAME=$(grep -E '^name *= *"[^"]*"' wrangler.toml | head -1 | sed 's/^name *= *"\([^"]*\)"/\1/')
            if [ -n "$CURRENT_NAME" ]; then
              NEW_NAME="${CURRENT_NAME}-${TIMESTAMP}"
              sed -i "s/^name *= *\"${CURRENT_NAME}\"/name = \"${NEW_NAME}\"/" wrangler.toml
              echo "✅ 已更新wrangler.toml名称: ${NEW_NAME}"
              
              # 验证是否真的更改了
              if grep -q "${NEW_NAME}" wrangler.toml; then
                echo "✅ 名称更新验证成功"
              else
                echo "❌ 名称更新失败，当前内容:"
                head -1 wrangler.toml
              fi
            else
              echo "⚠️  无法提取当前名称，跳过名称更新"
            fi
          else
            echo "⚠️  wrangler.toml不存在，跳过名称更新"
          fi

      - name: 提交更改
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add _worker.js wrangler.toml
          if git diff --cached --quiet; then
            echo "🟡 无文件更改，跳过提交"
          else
            git commit -m "🔧 [自动化] 更新KV支持功能 - $(date +%Y-%m-%d)"
            echo "✅ 更改已提交"
          fi

      - name: 推送更改
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: 清理旧备份
        run: |
          # 保留最近5个备份文件
          ls -t _worker.js.backup.* 2>/dev/null | tail -n +6 | xargs rm -f 2>/dev/null || true
          echo "✅ 清理完成"
