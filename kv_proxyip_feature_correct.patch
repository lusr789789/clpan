diff --git a/_worker.js b/_worker.js
index abcdef1..1234567 100644
--- a/_worker.js
+++ b/_worker.js
@@ -126,6 +126,20 @@ export default {
 
             proxyIP = env.PROXYIP || env.proxyip || proxyIP;
             
+            // 如果proxyIP为空，尝试从KV空间的PROXYIP获取
+            if (!proxyIP || proxyIP === '') {
+                try {
+                    if (env.KV) {
+                        const kvProxyIP = await env.KV.get('PROXYIP');
+                        if (kvProxyIP && kvProxyIP !== '') {
+                            proxyIP = kvProxyIP;
+                            // 将KV空间的PROXYIP内容也添加到proxyIPPool中
+                            const kvProxyIPs = await 整理(kvProxyIP);
+                            proxyIPPool = proxyIPPool.concat(kvProxyIPs);
+                        }
+                    }
+                } catch (error) {
+                    console.error('从KV获取PROXYIP失败:', error);
+                }
+            }
+            
             proxyIPs = await 整理(proxyIP);
             proxyIP = proxyIPs[Math.floor(Math.random() * proxyIPs.length)];
             DNS64Server = env.DNS64 || env.NAT64 || DNS64Server;
@@ -2484,7 +2498,19 @@ async function 整理(内容) {
 
     // 使用逗号分割字符串，得到地址数组
     const 地址数组 = 替换后的内容.split(',');
-
-    return 地址数组;
+    
+    // 处理每个地址，忽略#后面的内容
+    const 处理后的数组 = 地址数组.map(地址 => {
+        // 去除首尾空格
+        地址 = 地址.trim();
+        
+        // 如果有#符号，只保留#前面的部分
+        if (地址.includes('#')) {
+            地址 = 地址.split('#')[0].trim();
+        }
+        
+        return 地址;
+    });
+
+    return 处理后的数组;
 }